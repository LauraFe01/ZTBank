# docker-compose.yml
version: '3.8'

services:

  client-internal:
    image: ubuntu
    container_name: client-internal
    networks:
      internal-net:
        ipv4_address: 192.168.10.10
    tty: true
    command: bash

  client-external:
    image: ubuntu
    container_name: client-external
    networks:
      external-net:
        ipv4_address: 192.168.20.10
    tty: true
    command: bash

  client-wifi:
    image: ubuntu
    container_name: client-wifi
    networks:
      wifi-lan:
        ipv4_address: 192.168.30.10
    tty: true
    command: bash
  
  splunk:
    image: splunk/splunk:latest
    container_name: splunk
    environment:
      - SPLUNK_START_ARGS=--accept-license
      - SPLUNK_PASSWORD=${SPLUNK_PASSWORD}
    ports:
      - "8000:8000"
      - "8088:8088"
      - "8089:8089"
    networks:
      net-lab:
        ipv4_address: 192.168.200.5
    volumes:
      - ./logs/squid:/var/log/squid
      - ./logs/snort:/var/log/snort
      - ./splunk-apps/log_inputs:/opt/splunk/etc/apps/log_inputs
      - ./splunk-apps/my_custom_alerts:/opt/splunk/etc/apps/my_custom_alerts 

  router:
    build: ./router
    container_name: router
    ports:
      - "5000:5000"
    environment:
      - TZ=Europe/Rome
    privileged: true                      
    sysctls:
      net.ipv4.ip_forward: 1             
    networks:
      internal-net:
        ipv4_address: 192.168.10.254
      external-net:
        ipv4_address: 192.168.20.254
      wifi-lan:
        ipv4_address: 192.168.30.254
      net-lab:
        ipv4_address: 192.168.200.254
    cap_add:
      - NET_ADMIN 
    tty: true
    volumes:
      - ./logs/router:/var/log/router
      - ./logs/squid:/var/log/squid
      - ./logs/snort:/var/log/snort
    
  db:
    image: postgres:14
    container_name: db
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypass
      POSTGRES_DB: mydb
    networks:
      net-lab:
        ipv4_address: 192.168.200.10
    volumes:
      - ./db/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./db/data.sql:/docker-entrypoint-initdb.d/02-data.sql
        
networks:
  internal-net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.10.0/24
  external-net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.20.0/24
  wifi-lan:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.30.0/24
  net-lab:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.200.0/24