# Configurazione saved searches con webhook

[Blacklist Detection]
search = index=threatintel sourcetype=blacklist | table src_ip
cron_schedule = */10 * * * *
enabled = 1
action.webhook = 1
action.webhook.param.url = http://pdp:5000/update_trust
action.webhook.param.method = POST
action.webhook.param.payload = {"type":"blacklist", "ips": "$result.src_ip$"}

[Snort Attack Detection]
search = index=main sourcetype=snort_alerts earliest=-30d@d latest=now | stats count by src_ip | where count > 10
cron_schedule = */10 * * * *
enabled = 1
action.webhook = 1
action.webhook.param.url = http://pdp:5000/update_trust
action.webhook.param.method = POST
action.webhook.param.payload = {"type": "attack", "src_ip": "$result.src_ip$", "count": "$result.count$"}

[Anomalous Access Detection]
search = index=main sourcetype=squid_logs (date_hour < 6 OR bytes_out > 10000000) earliest=-30d@d latest=now | stats count by src_ip | where count > 30
cron_schedule = */10 * * * *
enabled = 1
action.webhook = 1
action.webhook.param.url = http://pdp:5000/update_trust
action.webhook.param.method = POST
action.webhook.param.payload = {"type": "anomaly", "src_ip": "$result.src_ip$", "count": "$result.count$"}



# POLICY 1 (policy 8.2 punto 1 nel nostro documento)
# Scopo della ricerca
# Identificare IP sorgenti che negli ultimi 7 giorni hanno fatto almeno 10 tentativi di scansione di porte.
# Assegnare loro un punteggio di rischio 25.
# Impostare un’azione di blocco.
# Fornire una motivazione chiara.
# Inviare i risultati al webhook della policy engine (tramite action.webhook) per l’applicazione automatica delle contromisure
# [TrustScoreReduction_AttackAttempts]
'''action.webhook = 1
action.webhook.enable_allowlist = 0
action.webhook.httpmethod = POST
action.webhook.param.url = http://pdp:5000/decide
action.webhook.url = http://pdp:5000/decide
alert.digest_mode = 0
alert.severity = 2
alert.suppress = 0
alert.track = 1
alert_type = always
counttype = number of events
cron_schedule = */1 * * * *
dispatch.earliest_time = -7d@d
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than
search = index=main sourcetype=snort_alert "Port scan detected" | rex field=_raw "\{(?:TCP|UDP)\}\s+(?<src_ip>\d{1,3}(?:\.\d{1,3}){3}):\d+\s+->" | stats count, max(_time) as last_time by src_ip | where count >= 10 | eval trust_reduction = 25 | eval action = "block" | eval reason = "Multiple port scan attempts in last 30 days" | eval timestamp = strftime(last_time, "%Y-%m-%dT%H:%M:%S") | table timestamp, src_ip, count, trust_reduction, action, reason

[Snort Alert Trust Update]
search = index=main sourcetype=snort_alerts | stats count by src_ip
cron_schedule = */5 * * * *
enabled = 1
action.webhook = 1
action.webhook.param.url = http://pdp:5000/update_trust
action.webhook.param.method = POST
action.webhook.param.payload = {"search":"$name$", "count":"$result.count$", "results":"$result$"}'''


#[Accesso da reti esterne]
#action.webhook = 1
#action.webhook.httpmethod = POST
#action.webhook.param.url = http://192.168.200.254:5000/splunk-webhook
#alert.digest_mode = 0
#alert.severity = 2
#alert.suppress = 0
#alert.track = 1
#alert_type = always
#cron_schedule = */1 * * * *
#dispatch.earliest_time = -15m
#dispatch.latest_time = now
#enableSched = 1
#search = index=main sourcetype=squid OR sourcetype=snort_alert 
#| rex field=_raw "(?<src_ip>\d{1,3}(?:\.\d{1,3}){3})"
#| search src_ip="192.168.20.*"
#| stats count, max(_time) as last_time by src_ip 
#| eval trust_reduction=20 
#| eval action="flag" 
#| eval reason="Access from external network" 
#| eval timestamp=strftime(last_time, "%Y-%m-%dT%H:%M:%S") 
#| table timestamp, src_ip, trust_reduction, action, reason  