#  Configurazione saved searches con webhook

[Snort-Attack-Detection-30Days]
search = index=main sourcetype=snort_alert | stats count by src_ip | where count > 10
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
cron_schedule = */1 * * * *
enableSched = 1
alert.digest_mode = 0
alert.suppress = 0
alert_type = always
alert.severity = 3
alert.track = 1
action.webhook = 1
action.webhook.param.url = http://pdp:5050/update_trust
action.webhook.httpmethod = POST

[Non-Working-Hours-Detection-More-Than-10-IPs]
search = index=main sourcetype=squid | eval hour=strftime(_time, "%H") | where hour<"07" OR hour>"20"| stats count by src_ip | where count > 30
dispatch.earliest_time = -7d@d
dispatch.latest_time = now
cron_schedule = */1 * * * *
enableSched = 1
alert.digest_mode = 0
alert.suppress = 0
alert_type = always
alert.severity = 3
alert.track = 1
action.webhook = 1
action.webhook.param.url = http://pdp:5050/update_trust
action.webhook.httpmethod = POST

[Non-Working-Hours-Detection]
search = index=main sourcetype=squid | where NOT cidrmatch("172.20.0.0/24", src_ip)
dispatch.earliest_time = -1m
dispatch.latest_time = now
cron_schedule = */1 * * * *
enableSched = 1
alert.digest_mode = 0
alert.suppress = 0
alert_type = always
alert.severity = 3
alert.track = 1
action.webhook = 1
action.webhook.param.url = http://pdp:5050/update_trust
action.webhook.httpmethod = POST


[HTTP POST DoS Detected on PEP /request]
search = index=main sourcetype=snort_alert "1:1000005" | table _raw src_ip
cron_schedule = */1 * * * *
enableSched = 1
alert.digest_mode = 0
alert.suppress = 0
alert_type = always
alert.severity = 3
alert.track = 1
action.webhook = 1
action.webhook.param.url = http://pdp:5050/block_ip
action.webhook.httpmethod = POST


# Policy "Gli utenti guadagnano 1 punto fiducia ogni 30 giorni di comportamento normale."
# Per semplicità, supponiamo che guadagnino 1 punto ogni minuto di comportamento normale
# lanciamo quindi la ss ogni minuto
[TrustReputation-Increase]
search = | inputlookup known_clients.csv\
         | search NOT [ search index=main sourcetype=snort_alert earliest=-48h latest=now\
               | rex field=_raw "(?<src_ip>\d{1,3}(?:\.\d{1,3}){3}):\d+\s+->"\
               | dedup src_ip\
               | fields src_ip ]\
         | table src_ip
dispatch.earliest_time = -48h
dispatch.latest_time = now
cron_schedule = */2 * * * *
enableSched = 1
alert.digest_mode = 0
alert.suppress = 0
alert_type = always
alert.severity = 2
alert.track = 1
action.webhook = 1
action.webhook.param.url = http://pdp:5050/update_trust
action.webhook.httpmethod = POST


# Policy "Tutti gli ip (dei client) che nelle ultime 48h hanno effettuato richieste sospette(DOS) riduzione fiducia o blocco"
# 1) Cerchiamo gli src_ip che corrispondono a quelli definiti in known_clients.csv
# 2) facciamo un join perchè ci interessa sapere quali sono, non quante volte l'hanno effettuata
# 3) cerhiamo l'src_ip tramite una regex
# 4) da 48h fa fino ad ora
# 5) specifica richiesta HTTP POST DoS Detected on PEP /request (da provare con altri tipi di eventi)
# 6) restituisce gli ip che rispondono a tali condizioni
# 7) la faccio partire ogni 3 min così i log non si sovrappongono con le altre (adesso per testare)
[TrustReputation-Decrease]
search = | inputlookup known_clients.csv\
         | join src_ip\
         [ search index=main sourcetype=snort_alert earliest=-48h latest=now "HTTP POST DoS Detected on PEP /request"\
             | rex field=_raw "(?<src_ip>\d{1,3}(?:\.\d{1,3}){3}):\d+\s+->"\
             | dedup src_ip\
             | fields src_ip\
         ]\
         | table src_ip
dispatch.earliest_time = -48h
dispatch.latest_time = now
cron_schedule = */3 * * * *
enableSched = 1
alert.digest_mode = 0
alert.suppress = 0
alert_type = always
alert.severity = 2
alert.track = 1
action.webhook = 1
action.webhook.param.url = http://pdp:5050/update_trust
action.webhook.httpmethod = POST
