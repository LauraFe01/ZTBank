# Configurazione saved searches con webhook

[BlockIPAlert1]
search = index=main sourcetype=snort_alert | stats count by src_ip | where count > 10
alert_type = scheduled
cron_schedule = */5 * * * *
enabled = 1
alert.severity = 3
# Webhook configuration
action.webhook = 1
action.webhook.url = http://192.168.200.254:5000/splunk-webhook
action.webhook.httpmethod = POST
action.webhook.enable_allowlist = 0


[BlockIPAlert2]
search = index=main sourcetype=squid | stats count by client_ip | where count > 20
alert_type = scheduled
cron_schedule = */10 * * * *
enabled = 1
alert.severity = 3
# Webhook configuration
action.webhook = 1
action.webhook.url = http://192.168.200.254:5000/splunk-webhook
action.webhook.httpmethod = POST
action.webhook.enable_allowlist = 0


[BlockIPAlert3] 
search = index=main sourcetype=router | stats count by src_ip | where count > 5
alert_type = scheduled
cron_schedule = */15 * * * *
enabled = 1
alert.severity = 3
# Webhook configuration
action.webhook = 1
action.webhook.url = http://192.168.200.254:5000/splunk-webhook
action.webhook.httpmethod = POST
action.webhook.enable_allowlist = 0


[test_icmp_ping_alert]
search = index=main sourcetype=snort_alert "ICMP Ping detected"
       | rex field=_raw "\{IPV6-ICMP\}\s+(?P<src_ip>[^\s]+)\s+->\s+(?P<dst_ip>[^\s]+)"
       | eval timestamp=strftime(_time, "%Y-%m-%dT%H:%M:%S")
       | where src_ip!="Null" AND dst_ip!="Null" AND src_ip!="::" AND dst_ip!="::"
       | table timestamp, src_ip, dst_ip
alert_type = always
cron_schedule = */1 * * * *
description = Alert when ICMP Ping detected in last 7 days
enableSched = 1
dispatch.earliest_time = -7d@d
dispatch.latest_time = now
alert.severity = 3
# Webhook configuration
action.webhook = 1
action.webhook.url = http://192.168.200.254:5000/splunk-webhook
action.webhook.httpmethod = POST
action.webhook.enable_allowlist = 0


# Esempio di alert per monitoraggio connessioni sospette
[SuspiciousConnections]
search = index=main sourcetype=squid 
       | rex field=_raw "(?P<timestamp>[^\s]+)\s+\d+\s+(?P<client_ip>[^\s]+)"
       | rex field=_raw "(?P<method>\w+)\s+(?P<url>http[^\s]+)"
       | eval suspicious_domains=if(like(url, "*malware*") OR like(url, "*phishing*") OR like(url, "*tor*"), 1, 0)
       | where suspicious_domains=1
       | eval timestamp=strftime(_time, "%Y-%m-%dT%H:%M:%S")
       | table timestamp, client_ip, url, method
alert_type = scheduled
cron_schedule = */2 * * * *
enabled = 1
alert.severity = 2
dispatch.earliest_time = -10m@m
dispatch.latest_time = now
# Webhook configuration
action.webhook = 1
action.webhook.url = http://192.168.200.254:5000/splunk-webhook
action.webhook.httpmethod = POST
action.webhook.enable_allowlist = 0


# Alert per tentativi di accesso al database
[DatabaseAccessAttempts]
search = index=main sourcetype=snort_alert "port 5432"
       | rex field=_raw "(?P<src_ip>\d+\.\d+\.\d+\.\d+).*(?P<dst_ip>\d+\.\d+\.\d+\.\d+):5432"
       | where dst_ip="192.168.200.10"
       | eval timestamp=strftime(_time, "%Y-%m-%dT%H:%M:%S")
       | eval alert_type="database_access_attempt"
       | table timestamp, src_ip, dst_ip, alert_type
alert_type = always
cron_schedule = */1 * * * *
enabled = 1
alert.severity = 1
dispatch.earliest_time = -5m@m
dispatch.latest_time = now
# Webhook configuration
action.webhook = 1
action.webhook.url = http://192.168.200.254:5000/splunk-webhook
action.webhook.httpmethod = POST
action.webhook.enable_allowlist = 0

# Utilizzata per la policy 8.2: cerca gli IP che hanno effettuato più di 10 tentativi di attacco negli ultimi 30 giorni
# In dettaglio:
# 1) Cerca tutti gli avvisi Snort relativi a scansioni di porte
# 2) Conta quante volte ciascun IP sorgente ha effettuato scansioni
# 3) Seleziona solo quelli con più di 10 tentativi
# 4) Aggiunge un campo risk_score di 25 punti (la penalità di fiducia)
# 5) Aggiunge un campo action per indicare che l'IP deve essere bloccato
# 6) Include un campo reason che descrive il motivo del blocco
# 7) Formatta i dati in una tabella che verrà inviata al webhook
[TrustScoreReduction_AttackAttempts]
search = index=main sourcetype=snort_alert "Port scan detected" 
        | stats count by src_ip 
        | where count > 10 
        | eval risk_score = 25 
        | eval action = "block" 
        | eval reason = "Multiple port scan attempts in last 30 days" 
        | eval timestamp = strftime(_time, "%Y-%m-%dT%H:%M:%S")
        | table timestamp, src_ip, count, risk_score, action, reason
alert_type = scheduled
cron_schedule = */1 * * * *  # Esegue ogni minuto per il test
dispatch.earliest_time = -10m@m
dispatch.latest_time = now
enableSched = 1
alert.severity = 2
# Webhook configuration
action.webhook = 1
action.webhook.url = http://192.168.200.254:5000/splunk-webhook
action.webhook.httpmethod = POST
action.webhook.enable_allowlist = 0